name: Check CAPEv2 Detection

on:
  workflow_run:
    workflows:
      - Test Build
    types:
      - completed

jobs:
  on-success:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Tailscale
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci

    - name: wait for Tailscale host
      run: |
        echo "[*] Waiting for Tailscale to be ready..."
        sleep 10
        for i in {1..20}; do
          echo "⏳ Pinging ${{ secrets.CAPE_HOST }} (attempt $i)..."
          ping -c 3 ${{ secrets.CAPE_HOST }} >/dev/null 2>&1 && break || {
            echo "❌ Tailscale not ready yet, retrying in 5 seconds..."
            sleep 5
          }
        done
        echo "✅ Host is reachable"
        # Need to implement timeout exit
      
    - name: Check for CAPE Sandbox status
      run: |
        echo "[*] Checking Sandbox status..."

        response=$(curl -s "http://{{ secrets.CAPE_HOST }}:8000/apiv2/cuckoo/status/")
        echo $response

        if [[ -z "$response" ]]; then
            echo "❌ No response received from CAPE"
            exit 1
        fi

        error=$(echo "$response" | jq -r '.error')
        available=$(echo "$response" | jq -r '.data.machines.available')

        if [[ "$error" != "false" ]]; then
            echo "❌ CAPE reported error=true"
            exit 1
        fi

        if [[ "$available" -lt 1 ]]; then
            echo "❌ No machines available in CAPE"
            exit 1
        fi

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-outputs
        path: ./bin/
      